C51 COMPILER V9.60.0.0   UART_DRIVER                                                       02/14/2025 14:35:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART_DRIVER
OBJECT MODULE PLACED IN .\Objects\uart_driver.obj
COMPILER INVOKED BY: E:\1.software\60.Keil_C51\C51\BIN\C51.EXE app\uart_driver.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\uart_driver.lst) TABS(2) OBJECT(.\Objects\uart_driver.obj)

line level    source

   1          #include "app/uart_driver.h"
   2          #include "user/my_types.h"
   3          #include <stdarg.h>
   4          #include <stdio.h>
   5          #include <string.h>
   6          #include <stdlib.h>
   7          
   8          volatile uint8 sending = 0;
   9          code uint8 hex_table[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
             -};
  10          
  11          void uart_init(void)
  12          {
  13   1        TMOD &= 0x0F;
  14   1        TMOD |= 0x20;
  15   1        TH1 = TL1 = 256 - (22118400 / ((BIT_RATE) * 12 * 16));
  16   1        TR1 = 1;
  17   1        
  18   1        SCON = 0x50;
  19   1        PCON |= 0x80;
  20   1        REN = 1;
  21   1        ES = 1;
  22   1        EA = 1;
  23   1      }
  24          
  25          void uart_irq(void) interrupt 4 
  26          {
  27   1        if(RI)
  28   1        {
  29   2          RI = 0;
  30   2        }
  31   1        else
  32   1        {
  33   2          TI = 0;
  34   2          sending = 0;
  35   2        }
  36   1      }
  37          
  38          void u_putchar(uint8 buf)
  39          {
  40   1        SBUF = buf;
  41   1        sending = 1;
  42   1        while(sending);
  43   1      }
  44          
  45          void print_int(int num) 
  46          {
  47   1        uint8 i = 0;
  48   1        char buffer[12];
  49   1        sprintf(buffer, "%d", num);
  50   1        for (i = 0; buffer[i] != '\0'; i++) 
  51   1        {
  52   2            u_putchar(buffer[i]);
  53   2        }
C51 COMPILER V9.60.0.0   UART_DRIVER                                                       02/14/2025 14:35:52 PAGE 2   

  54   1      }
  55          
  56          void print_hex(unsigned int num) 
  57          {
  58   1        uint8 i = 0;
  59   1        char buffer[9];
  60   1        sprintf(buffer, "%x", num);
  61   1        for (i = 0; buffer[i] != '\0'; i++) 
  62   1        {
  63   2            u_putchar(buffer[i]);
  64   2        }
  65   1      }
  66          
  67          void print_string(const char *str) 
  68          {
  69   1          while (*str) 
  70   1              u_putchar(*str++);
  71   1      }
  72          
  73          void u_printf(const char *format, ...)
  74          {
  75   1        typedef char *va_list;
  76   1        va_list args;
  77   1        
  78   1        va_start(args, format);
  79   1        
  80   1        while (*format) 
  81   1        {
  82   2          if (*format == '%') {
  83   3              format++;
  84   3              switch (*format) {
  85   4                  case 'd':
  86   4                  case 'i':
  87   4                      print_int(va_arg(args, int));
  88   4                      break;
  89   4                  case 'x':
  90   4                      print_hex(va_arg(args, unsigned int));
  91   4                      break;
  92   4                  case 's':
  93   4                      print_string(va_arg(args, const char*));
  94   4                      break;
  95   4                  case 'c':
  96   4                      u_putchar(va_arg(args, int));
  97   4                      break;
  98   4                  default:
  99   4                      u_putchar('%');
 100   4                      u_putchar(*format);
 101   4                      break;
 102   4              }
 103   3          } else {
 104   3              u_putchar(*format);
 105   3          }
 106   2          format++;
 107   2        }
 108   1        
 109   1        va_end(args);
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    390    ----
   CONSTANT SIZE    =     22    ----
C51 COMPILER V9.60.0.0   UART_DRIVER                                                       02/14/2025 14:35:52 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      45
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
